# -*- coding: utf-8 -*-
# @Time    : 2019/3/14 9:52
import pymongo
MONGO_URL = 'localhost'
MONGO_DB = 'jd'
MONGO_TABLE = 'jd_comment'
MONGO_TABLE_URL = 'jd_urls'

def write_product_url_to_mongo(product_urls):
	# out = open('jd_url_csv139.csv','a', newline='') 		#打开文件，追加a，设定写入模式
	# csv_write = csv.writer(out,dialect='excel') 	#写入具体内容
	# for product_url in product_urls:
	# 	product_url = 'https://item.jd.com/' +  product_url +'.html'
	# 	url = [product_url]
	# 	try:
	# 		csv_write.writerow(url)
	# 	except:
	# 		print("写入失败：",url)

	client = pymongo.MongoClient(MONGO_URL)
	db = client[MONGO_DB]
	for product_url in product_urls:
		product_url = 'https://item.jd.com/' +  product_url +'.html'
		product_url = {'product_url':product_url}
		# try:
		# print(db[MONGO_TABLE_URL].find({"product_url":product_url["product_url"]}))
		# query = {'product_url': 'https://item.jd.com/36399702288.html'}
		if db[MONGO_TABLE_URL].find(product_url):
			print("url已经在数据库中了",product_url)
			# pass
		else:
			print("插入成功")
			db[MONGO_TABLE_URL].update({'product_url':product_url['product_url']},{'$set':product_url},True)

		# except:
		# 	print("插入商品链接失败",product_url)
if __name__ == '__main__':
	res = ['36163289367', '36167771335', '36169825220', '36174530239', '36176164133', '36179074087', '36180385085', '36182824796', '36184303494', '36185924617', '36189470608', '36190255013', '36191954225', '36192256796', '36198019933', '36198626111', '36200185018', '36200686129', '36201741249', '36202376759', '36204950313', '36237579151', '36242212172', '36243503447', '36243856823', '36244665005', '36246262233', '36278697791', '36278743127', '36279371829', '36282072653', '36285987370', '36288327996', '36289575806', '36310980097', '36312255365', '36312612069', '36314794661', '36316958253', '36317996142', '36319377124', '36320746648', '36321035328', '36323713360', '36343383085', '36345137785', '36347700614', '36360357089', '36386876580', '36386989946', '36392805956', '36395582875', '36396645043', '36396862360', '36399702288', '36400276522', '36400732423', '36401016575', '36401937699', '36402518953', '36406241867', '36408540989', '36410464351', '36416555819', '36419152479', '36419664303', '36422952230', '36423024248', '36425494732', '36431511626', '36432934186', '36439963874', '36449764390', '36467783491', '36501783264', '36502099939', '36504665680', '36508797500', '36518063012', '36519737221', '36528820984', '36595820376', '36600750677', '36604254072', '36605469826', '36616676851', '36631717882', '36642482712', '36644298066', '36657122683', '36698712069', '36700237175', '36700678672', '36701663490', '36703107674', '36705494137', '36708988798', '36715939451', '36720857995', '36721205837', '36721266293', '36722202272', '36725161009', '36732913143', '36747159525', '36747204552', '36748381888', '36756062953', '36756105602', '36756421544', '36759865454', '36760919459', '36763084743', '36763265003', '36774083948', '36780922054', '36803287698', '36814811785', '36815295335', '36816508344', '36819834428', '36821849061', '36822032724', '36824824545', '36826514646', '36828338404', '36830779428', '36832616086', '36835170492', '36837661674', '36842334148', '36843255909', '36844803876', '36857856477', '36859417641', '36871798732', '36892358621', '36906034424', '36909390596', '36915406389', '36919053279', '36923295569', '36924289243', '36928619641', '36928701433', '36930159588', '36931342154', '36932315410', '36936183657', '36936927632', '36937820703', '36940193485', '36940992080', '36941835350', '36949417000', '36949835076', '36961759350', '36961978145', '36962962138', '36963300521', '36965337957', '36966604644', '36975860297', '36987400279', '36989933126', '36991511639', '37017492805', '37027369772', '37028152940', '37028410449', '37030358263', '37031315329', '37035713349', '37037364860', '37040468646', '37043196568', '37043580934', '37047588946', '37048723365', '37049615652']
	write_product_url_to_mongo(res)
